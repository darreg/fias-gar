version: '3'

services:
  caddy:
    container_name: monitor-caddy
    image: caddy:latest
    ports:
      - '${PROMETHEUS_PORT}:9090'
      - '${ALERTMANAGER_PORT}:9093'
    volumes:
      - ./docker/caddy:/etc/caddy
    environment:
      - CADDY_ADMIN_USER=${CADDY_ADMIN_USER}
      - CADDY_ADMIN_PASSWORD=${CADDY_ADMIN_PASSWORD}
    restart: unless-stopped
    networks:
      - monitor-net

  prometheus:
    container_name: monitor-prometheus
    image: prom/prometheus:latest
    user: root
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - ./config/alerts:/prometheus_alerts
      - ./config/targets:/prometheus_sd_files
      - ./volumes/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=10d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    expose:
      - '9090'
    networks:
      - monitor-net

  alertmanager:
    container_name: monitor-alertmanager
    image: prom/alertmanager:latest
    volumes:
      - ./docker/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - '9093'
    networks:
      - monitor-net

  alertmanager-bot:
    container_name: monitor-alertmanager-bot
    image: metalmatze/alertmanager-bot:latest
    command:
      - '--alertmanager.url=http://alertmanager:9093'
      - '--log.level=info'
      - '--store=bolt'
      - '--bolt.path=/data/bot.db'
    restart: unless-stopped
    environment:
      TELEGRAM_ADMIN: '${ALERTMANAGER_BOT_CHAT_ID}'
      TELEGRAM_TOKEN: '${ALERTMANAGER_BOT_TOKEN}'
    ports:
      - '8080:8080'
    volumes:
      - ./volumes/alertmanager-bot/data:/data
    networks:
      - monitor-net

  grafana:
    container_name: monitor-grafana
    image: grafana/grafana:8.3.3
    user: root
    volumes:
      - ./volumes/grafana/data:/var/lib/grafana
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/dashboards:/etc/grafana/provisioning/dashboards/json
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${GRAFANA_PORT}:3000'
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge

