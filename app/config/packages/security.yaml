security:
    encoders:
        App\Entity\User:
            algorithm: auto
        App\Entity\Admin:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin_secured_area:
            pattern:   ^/admin
            anonymous: false
            lazy: true
            provider: app_admin_provider
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
            logout:
                path: admin_logout
                target: /admin/login

            switch_user:  { role: ROLE_SUPER_ADMIN, parameter: _impersonate }

        api_secured_area:
            pattern:   ^/api
            stateless: true
            anonymous: false
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\ApiTokenAuthenticator

#        user_secured_area:
#            pattern:   ^/
#            anonymous: true
#            provider: app_user_provider
#            guard:
#                authenticators:
#                    - App\Security\UserAuthenticator
#                entry_point: App\Security\UserAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN, ROLE_EDITOR_USER, ROLE_EDITOR_APITOKEN, ROLE_EDITOR_EXTADDROBJ, ROLE_EDITOR_EXTHOUSE] }

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_ADMIN, ROLE_EDITOR_USER, ROLE_EDITOR_APITOKEN, ROLE_EDITOR_EXTADDROBJ, ROLE_EDITOR_EXTHOUSE

